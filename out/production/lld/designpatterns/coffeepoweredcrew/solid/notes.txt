S - Single Responsibility Principle
O - Open Closed Principle
L - Liskov Substitution Principle
I - Interface Segregation Principle
D - Dependency Inversion Principle

1) S
----
- "There should never be more than one reason for a class to change."
- A class provides a very focused, single functionality, addresses a specific concern.

2) O
----
- "Software entities (Classes, Modules, Methods etc.) should be open for extension, but closed for modif."
- Avoid modifying existing base classes an use inheritance/overriding to extend and write modifications.
- Basically, ab abstract base class which has some concrete methods (closed for modification) and abstract methods
  which are supposed to be overriden by subclasses (open for extension).

3) L
----
- "We should be able to substitute base class objects with child class objects & this should not alter behavior/characteristics
   of program."